version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  staging:
    docker:
      - image: circleci/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: pull wmfs/node
          command: docker build -t test .
      - run:
          name: update package.json
          command: |
            sudo npm install -g npm-check-updates
            ncu -u
      - run:
          name: Store dev api Docker image
          command: docker save -o image.tar test
      - persist_to_workspace:
          root: .
          paths:
            - package.json
            - image.tar
  test workspace:
    docker:
      - image: circleci/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: move package.json
          command: mv /tmp/workspace/package.json .
      - run:
          name: Load stored Docker image
          command: |
            docker load -i /tmp/workspace/image.tar
      - run:
          name: list images
          command: docker image ls
  test:
    docker:
      - image: circleci/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: npm install
      - slack/notify:
          include_job_number_field: false
          include_project_field: false
          channel: C01BKV32XML
          title: This is a test title for $CIRCLE_JOB
          message: "YAY this job passed :tada:"
      - slack/status:
          mentions: 'UAB9DNB9U'
          fail_only: true
          failure_message: Oh noes it's failed!
  scan:
    docker:
      - image: circleci/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - restore_cache:
          key: vulnerability-db
      - run:
          name: Pull node:latest
          command: docker pull node:latest
      - run:
          name: Scan api and app images
          command: |
            VERSION=$(
              curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
              grep '"tag_name":' | \
              sed -E 's/.*"v([^"]+)".*/\1/'
            )
            wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
            tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
            ./trivy --exit-code 1 --severity HIGH --quiet --auto-refresh node:latest
      - save_cache:
          key: vulnerability-db
          paths:
            - $HOME/.cache/trivy
      - slack/status:
          include_job_number_field: false
          include_project_field: false
          fail_only: true
          failure_message: "Oh no!  There is a critical security vulnerability in $CIRCLE_PROJECT_REPONAME! :scream: :cry:"
  prod:
    docker:
      - image: circleci/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: prod build
          command: docker build -t prod .
      - slack/notify:
          color: '#42e2f4'
          mentions: 'UAB9DNB9U'
          message: ":tada: It's worked"
workflows:
  version: 2
  release-branch-workflow:
    jobs:
      - staging
      - test workspace:
          requires:
            - staging
      - test:
          requires:
            - test workspace
      - scan:
          requires:
            - test
      - prod:
          requires:
            - scan
